name: dotnet package
 
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore ./SpaceBattle/
      - name: test
        run: echo ${{ github.actor }} | echo ${{ github.triggering_actor }} | echo ${{github.repositoryUrl}}
      - name: Build
        run: dotnet build ./SpaceBattle/ --no-restore /p:ContinuousIntegrationBuild=true
      - name: Test
        run: dotnet test ./SpaceBattle/ -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover
      - name: Upload code coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          files: ./SpaceBattle/SpaceBattle.Lib.Test/TestResults/coverage.opencover.xml
  deploy:
    runs-on: ubuntu-latest
    steps:
      # ... other steps to deploy the code
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })